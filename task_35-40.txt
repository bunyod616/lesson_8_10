36 = https://www.codewars.com/kata/56f399b59821793533000683/train/python = Sort deck of cards

def sort_cards(cards):
    rank_order = {'A': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, 'T': 10, 'J': 11, 'Q': 12, 'K': 13}
    
    return sorted(cards, key=lambda card: rank_order[card])

37 = https://www.codewars.com/kata/58a08e622e7fb654a300000e/train/python = Sort the climbing grades

def sort_grades(lst):
    def grade_key(grade):
        if grade == 'VB':
            return -1  # VB should come before all other grades
        if grade == 'V0+':
            return 0.5  # V0+ should come after V0 but before V1
        return int(grade[1:])  # Extract the number from the grade for sorting
    
    return sorted(lst, key=grade_key)

38 = https://www.codewars.com/kata/5b538734beb8654d6b00016d/train/python = Queue time counter

def queue_time(queue, pos):
    time = 0
    friend_tickets = queue[pos]
    
    while friend_tickets > 0:
        person_tickets = queue.pop(0)
        time += 1
        
        if person_tickets > 1:
            queue.append(person_tickets - 1)
        
        if pos == 0:
            friend_tickets -= 1
            if friend_tickets == 0:
                break
            pos = len(queue) - 1
        else:
            pos -= 1
    
    return time
    
39 = https://www.codewars.com/kata/54eea36b7f914221eb000e2f/train/python= Alphabetize a list by the nth character


def sort_it(words, n):
    words_list = [word.strip() for word in words.split(',')]
    def sort_key(word):
        return (word[n-1].lower(), word.lower())
    sorted_words = sorted(words_list, key=sort_key)
    return ', '.join(sorted_words)

40 = https://www.codewars.com/kata/53da6a7e112bd15cbc000012/train/python = Sorting Dictionaries 

def sort_dict(d):
    items = list(d.items())
    sorted_items = sorted(items, key=lambda x: x[1], reverse=True)
    return sorted_items